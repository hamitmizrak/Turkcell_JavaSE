package com.hamitmizrak;

// Yazýlým Prensible;

// Clean Code:
// Gereksiz verilerden,tekrarlardan,okunabiliði yüksek, yazýlabilirliði daha
// Kodun temiz olmasý, kodu yazan geliþtirici dýþýnda ekiptekilerin
// kodu kolay þekilde anlayabilmesi ve geliþtirme yapabilmesidir.
// readability, (Basitçe okunup anlaþýlýyor )
// changeability, (Basitçe deðiþtirilebiliyor )
// extensibility (Basitçe geniþletilebiliyor )
// maintainability. (Basitçe bakým yapýlabilsin)
// isimlendirme: net bir þekilde belirmemiz lazým.

// design pattern, software pattern , SOLID ,

// Spagetti Codes:
// Clean Code tam tersi durumuna denir.
// Gereksiz, okunabilirliði zor, düzensiz iç içe girmiþ for-while.vs olan
// kodlara denir.

// KISS (Keep It Simple Stupid)
// Kodlarýmýzda her zaman için en basit yolla sonuça varmaktýr.
// Kolay bir yol ile çözülebilecek problemleri ya da baþka bir ifade ile,
// bir kaç satýr kod ile geliþtirilebilecek bir metodu, gereksiz ifadelerden
// kaçýnmaktýr.

// DRY (Don't Repeat Yourself)
// Kodlarýmýzda sürekli kendimizi tekrar yapmamýz gereksiz ve sakýncalýdýr.
// Çözüm: Class, Metotlarý

// Dammy Code (Kukla Kod)
// Classlarýmýzýn içinde interface'leri implement ederek , eklenen gereksiz ve
// kullanýlmayan kod bütüne denir.

// YAGNI – You Ain't Gonna Need It(Buna Ýhtiyacýn Olmayacak)
// YAGNI, ihtiyacýmýz olmayacak þeyleri sisteme dahil etmemeyi söyleyen bir
// prensip.

// RREP:Reuse-Release Equivalence Principle (REP) –
// Tekrar Kullaným ve Sürüm Eþitliði
// Projemizde paketlemeler çok öenmlidir
// Classlarýmýzý paketler yardýmýyla saklarýz.
// Common roles: paketler küçük harflerle yazýlýr.

// CCP: Common Clouse Prensible
// ilgili classý, ilgili pakete eklemek gerekir.

// Monad:
// Metotlarý iç içe kullanmaya denir.
// metotun çýktýsý , metotun girdisidir.

public class _37_OOP2_SoftwarePrensible {
	
}
